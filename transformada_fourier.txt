%==========================================================================
% ACTIVIDAD: Simulación y análisis de señales con la transformada de Fourier
% Autor: Noé Isaac Martinez Saucedo
% Fecha: 31/07/2025
% Descripción: Este script crea y analiza señales elementales como la
%              sinusoide, el pulso rectangular y la función escalón.
%              Utiliza la Transformada Rápida de Fourier (FFT) para
%              visualizar el espectro de frecuencia y verifica la propiedad
%              de desplazamiento en el tiempo.
%		            cabe mencionar que este codigo se tiene que ingresar por secciones,
%		            cada  "<•>"  para ir generando las graficas en en Octave Online.
%==========================================================================

% "<•>"
% --- 1. CONFIGURACIÓN INICIAL Y PARÁMETROS ---
% Definimos los parámetros de la simulación.
clear all; close all; clc;
fs = 1000;         % Frecuencia de muestreo (Hz)
duration = 1;      % Duración de la señal (segundos)
t = 0:1/fs:duration; % Vector de tiempo
N = length(t);     % Número total de muestras
f_axis = (0:N-1) * (fs/N); % Vector de frecuencia para los espectros

% "<•>"
% --- 2. ANÁLISIS DE LA SEÑAL SENOIDAL ---
f_sin = 10;        % Frecuencia de la señal (10 Hz)
signal_sin = sin(2 * pi * f_sin * t);
fft_sin = fft(signal_sin);

% Gráficas de la señal y su espectro.
figure(1);
subplot(2, 1, 1);
plot(t, signal_sin);
title('Señal Senoidal (Dominio del Tiempo)');
xlabel('Tiempo (s)'); ylabel('Amplitud'); grid on;

subplot(2, 1, 2);
plot(f_axis(1:N/2), abs(fft_sin(1:N/2)) / N);
title('Espectro de Magnitud de la Señal Senoidal');
xlabel('Frecuencia (Hz)'); ylabel('Magnitud Normalizada');
xlim([0 fs/2]); grid on;

% "<•>"
% --- 3. ANÁLISIS DEL PULSO RECTANGULAR ---
pulse_duration = 0.2;
pulse_start = 0.4;
signal_rect = (t >= pulse_start) & (t <= pulse_start + pulse_duration);
fft_rect = fft(signal_rect);

% Gráficas de la señal y su espectro.
figure(2);
subplot(2, 1, 1);
plot(t, signal_rect);
title('Pulso Rectangular (Dominio del Tiempo)');
xlabel('Tiempo (s)'); ylabel('Amplitud');
ylim([-0.2 1.2]); grid on;

subplot(2, 1, 2);
plot(f_axis(1:N/2), abs(fft_rect(1:N/2)) / N);
title('Espectro de Magnitud del Pulso Rectangular');
xlabel('Frecuencia (Hz)'); ylabel('Magnitud Normalizada');
xlim([0 fs/2]); grid on;

% "<•>"
% --- 4. ANÁLISIS DE LA FUNCIÓN ESCALÓN ---
step_start = 0.5;
signal_step = (t >= step_start);
fft_step = fft(signal_step);

% Gráficas de la señal y su espectro.
figure(3);
subplot(2, 1, 1);
plot(t, signal_step);
title('Función Escalón (Dominio del Tiempo)');
xlabel('Tiempo (s)'); ylabel('Amplitud');
ylim([-0.2 1.2]); grid on;

subplot(2, 1, 2);
plot(f_axis(1:N/2), abs(fft_step(1:N/2)) / N);
title('Espectro de Magnitud de la Función Escalón');
xlabel('Frecuencia (Hz)'); ylabel('Magnitud Normalizada');
xlim([0 fs/2]); grid on;

% "<•>"
% --- 5. VERIFICACIÓN DE LA PROPIEDAD DE DESPLAZAMIENTO EN EL TIEMPO ---
pulse_start_orig = 0.3;
pulse_delay = 0.2;
signal_rect_original = (t >= pulse_start_orig) & (t <= pulse_start_orig + pulse_duration);
signal_rect_shifted = (t >= (pulse_start_orig + pulse_delay)) & (t <= (pulse_start_orig + pulse_duration + pulse_delay));
fft_rect_original = fft(signal_rect_original);
fft_rect_shifted = fft(signal_rect_shifted);

figure(4);
subplot(2, 1, 1);
plot(f_axis(1:N/2), abs(fft_rect_original(1:N/2)) / N, 'b', 'DisplayName', 'Original');
hold on;
plot(f_axis(1:N/2), abs(fft_rect_shifted(1:N/2)) / N, 'r--', 'DisplayName', 'Desplazado');
hold off;
title('Comparación de Magnitud (FFT)');
xlabel('Frecuencia (Hz)'); ylabel('Magnitud Normalizada');
xlim([0 50]); grid on; legend('Location', 'northeast');

subplot(2, 1, 2);
plot(f_axis(1:N/2), unwrap(angle(fft_rect_original(1:N/2))), 'b', 'DisplayName', 'Original');
hold on;
plot(f_axis(1:N/2), unwrap(angle(fft_rect_shifted(1:N/2))), 'r--', 'DisplayName', 'Desplazado');
hold off;
title('Comparación de Fase (FFT)');
xlabel('Frecuencia (Hz)'); ylabel('Fase (radianes)');
xlim([0 50]); grid on; legend('Location', 'northeast');
